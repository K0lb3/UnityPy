name: Test and Publish

on: [push, pull_request, workflow_dispatch]

jobs:
  deploy:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macOS-latest", "windows-latest"]

    timeout-minutes: 30

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install --upgrade twine

    - name: Set up QEMU
      if: runner.os == 'Linux'
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.3.1
      env:
        CIBW_ARCHS_LINUX: auto aarch64
        CIBW_BEFORE_BUILD: pip install -U lz4 brotli Pillow texture2ddecoder etcpak tabulate
        CIBW_BUILD: |
          cp37-manylinux_x86_64 cp37-manylinux_i686 cp37-manylinux_aarch64 cp37-win_amd64 cp37-win32 cp37-macosx_x86_64
          cp38-manylinux_x86_64 cp38-manylinux_i686 cp38-manylinux_aarch64 cp38-win_amd64 cp38-win32 cp38-macosx_x86_64
          cp39-manylinux_x86_64 cp39-manylinux_i686 cp39-manylinux_aarch64 cp39-win_amd64 cp39-win32 cp39-macosx_x86_64
          cp310-manylinux_x86_64 cp310-manylinux_i686 cp310-manylinux_aarch64 cp310-win_amd64 cp310-win32 cp310-macosx_x86_64
        CIBW_REPAIR_WHEEL_COMMAND: '' # Disable auditwheel
        CIBW_TEST_REQUIRES: pytest
        CIBW_TEST_COMMAND: pytest -v -s {package}/tests

    - name: Publish wheels to PyPI
      if: success() && github.event_name == 'push' && env.TWINE_PASSWORD != ''
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        twine upload ./wheelhouse/*.whl --skip-existing
